---
name: Test

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Install pip packages.
        run: sudo pip install ansible-lint && sudo pip install yamllint

      - name: Run Yaml lint on ansible folder.
        run: sudo yamllint -c tests/yamllint.yml ansible/

      - name: Run Ansible lint on ansible folder.
        run: sudo ansible-lint -v --force-color ansible/

      - name: Stop MySQL server.
        run: sudo service mysql stop && sudo rm -rf /root/.my.cnf

      - name: Copy authorized keys file.
        run: |
          sudo cp ./vagrant/ssh/authorized_keys /root/.ssh/authorized_keys
          sudo chmod 600 /root/.ssh/authorized_keys

      - name: Build container.
        run: docker build . --file Dockerfile --tag sitepilot/autopilot:${GITHUB_SHA}

      - name: Create environment file.
        run: |
          sudo cp .env.example .env
          sudo sed -i "s/APP_DOCKER_TAG=latest/APP_DOCKER_TAG=$GITHUB_SHA/" .env  
          sudo sed -i 's/APP_TEST_HOST=host.docker.internal/APP_TEST_HOST=172.17.0.1/' .env
          sudo sed -i 's/APP_TEST_PORT=7685/APP_TEST_PORT=22/' .env
          sudo sed -i 's/APP_TEST_AUTOPILOT_HOST=false/APP_TEST_AUTOPILOT_HOST=true/' .env
    
      - name: Keep sources.list up to date.
        run: |
          sudo gem install --no-ri --no-rdoc apt-spy2
          apt-spy2 fix

      - name: Run Autopilot installer.
        run: ./autopilot install-test ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_PASSWORD }}

      - name: Test server:provision command.
        run: ./autopilot server:provision --host=ams-web10 --skip-tags=upgrade --disable-tty

      - name: Test user:provision command.
        run: ./autopilot user:provision --user=user1250 --disable-tty

      - name: Test server:test command.
        run: ./autopilot server:test --host=ams-web10 --skip-tags=test-domains --disable-tty

      - name: Deploy image to Docker hub.
        run: |
          if [[ ${GITHUB_REF##*/} = "master" ]]; then export DOCKER_TAG=latest; else export DOCKER_TAG=${GITHUB_REF##*/}; fi
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag sitepilot/autopilot:${GITHUB_SHA} sitepilot/autopilot:$DOCKER_TAG
          docker push sitepilot/autopilot:$DOCKER_TAG
