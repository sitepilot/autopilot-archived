---
name: Test

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Install pip packages.
        run: sudo pip install ansible-lint && sudo pip install yamllint

      - name: Run Yaml lint on ansible folder.
        run: sudo yamllint -c tests/yamllint.yml ansible/

      - name: Run Ansible lint on ansible folder.
        run: sudo ansible-lint -v --force-color ansible/

      - name: Build container.
        run: docker build . --file Dockerfile --tag sitepilot/autopilot:${GITHUB_SHA}

      - name: Create environment file.
        run: |
          sudo cp .env.example .env
          sudo sed -i "s/APP_DOCKER_TAG=latest/APP_DOCKER_TAG=$GITHUB_SHA/" .env  
          sudo sed -i 's/APP_TEST_HOST=host.docker.internal/APP_TEST_HOST=172.17.0.1/' .env
          sudo sed -i 's/APP_TEST_PORT=7685/APP_TEST_PORT=22/' .env

      - name: Run Autopilot installer.
        run: ./autopilot install-test ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_PASSWORD }}

      - name: Test server:provision command.
        run: ./autopilot server:provision --host="$(date +"%s")-test" --skip-tags=upgrade --debug

      - name: Test user:provision command.
        run: ./autopilot user:provision --user="$(date +"%s")-test" --debug

      - name: Test app:provision command.
        run: ./autopilot app:provision --app="$(date +"%s")-test" --debug

      - name: Test database:provision command.
        run: ./autopilot database:provision --database="$(date +"%s")-test" --debug

      - name: Test server:test command.
        run: ./autopilot server:test --host="$(date +"%s")-test" --debug

      - name: Test server:cert:renew command.
        run: ./autopilot server:cert:renew --host="$(date +"%s")-test" --debug

      - name: Test user:test command.
        run: ./autopilot user:test --user="$(date +"%s")-test" --skip-tags=test-domains --debug

      - name: Test app:wp:install command.
        run: ./autopilot app:wp:install --app="$(date +"%s")-test" --debug

      - name: Test app:wp:update command.
        run: ./autopilot app:wp:update --app="$(date +"%s")-test" --debug

      - name: Test app:wp:search-replace command.
        run: ./autopilot app:wp:search-replace test123 test456 --app="$(date +"%s")-test" --debug

      - name: Test app:wp:login command.
        run: ./autopilot app:wp:login captain --app="$(date +"%s")-test" --debug

      - name: Test database:destroy command.
        run: ./autopilot database:destroy --database="$(date +"%s")-test" --debug

      - name: Test app:destroy command.
        run: ./autopilot app:destroy --app="$(date +"%s")-test" --debug

      - name: Test user:destroy command.
        run: ./autopilot user:destroy --user="$(date +"%s")-test" --debug

      - name: Deploy image to Docker hub.
        run: |
          if [[ ${GITHUB_REF##*/} = "master" ]]; then export DOCKER_TAG=latest; else export DOCKER_TAG=${GITHUB_REF##*/}; fi
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag sitepilot/autopilot:${GITHUB_SHA} sitepilot/autopilot:$DOCKER_TAG
          docker push sitepilot/autopilot:$DOCKER_TAG

      - name: "Failure: autopilot container logs."
        if: failure()
        run: |
          docker logs autopilot_test

      - name: "Failure: autopilot-mysql container logs."
        if: failure()
        run: |
          docker logs autopilot-mysql

      - name: "Failure: mysql-1 dind container logs."
        if: failure()
        run: |
          docker exec autopilot-dind docker exec -w /etc/mysql mysql-1 ls -l
          docker exec autopilot-dind docker logs mysql-1

      - name: "Failure: redis-1 dind container logs."
        if: failure()
        run: |
          docker exec autopilot-dind docker logs redis-1
