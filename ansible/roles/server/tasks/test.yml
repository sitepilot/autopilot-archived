---
- meta: flush_handlers

- name: "test : copy private key"
  copy:
    src: ../tests/test_key
    dest: /root/.ssh/test_key
    owner: root
    group: root
    mode: "0600"

# SSH Tests (when test public key is used)
- name: "test : can login over SSH using a private key as admin ({{ admin }})"
  command: "ssh -i /root/.ssh/test_key -o StrictHostKeyChecking=no {{ admin }}@127.0.0.1 'date'"
  when:
    - "auth_keys[0].key is defined"
    - '"test@server" in auth_keys[0].key'

- name: "test : can login over SSH using a private key as root"
  command: "ssh -i /root/.ssh/test_key -o StrictHostKeyChecking=no root@127.0.0.1 'date'"
  when:
    - "auth_keys[0].key is defined"
    - '"test@server" in auth_keys[0].key'

# MySQL Tests
- name: "test : connect to MySQL as admin"
  command: "mysql -u {{ admin }} -p{{ admin_pass }} -h docker-host -e 'show databases;'"
  changed_when: false

# HTTP Checks
- name: "test : web server is running (HTTP)"
  uri:
    url: http://127.0.0.1

- name: "test : web server is running (HTTPS)"
  uri:
    url: https://127.0.0.1
    validate_certs: false

- name: "test : web server admin panel is running (HTTPS)"
  uri:
    url: https://127.0.0.1:2083
    validate_certs: false

- name: "test : phpMyAdmin is available"
  uri:
    url: https://127.0.0.1/.sitepilot/pma/
    validate_certs: false

- name: "test : health check is available"
  uri:
    url: https://127.0.0.1/.sitepilot/pma/
    validate_certs: false

# Other Checks
- name: "test : PHP is installed"
  command: "php -v"
  become: true
  become_user: "{{ users[0].name }}"
  changed_when: false

- name: "test : WPCLI is installed"
  command: "wp --version"
  become: true
  become_user: "{{ users[0].name }}"
  changed_when: false

- name: "test : Composer is installed"
  command: "composer --version"
  become: true
  become_user: "{{ users[0].name }}"
  changed_when: false

- name: "test : Node.js is installed"
  command: "node -v"
  become: true
  become_user: "{{ users[0].name }}"
  changed_when: false

- name: "test : NPM is installed"
  command: "npm -v"
  become: true
  become_user: "{{ users[0].name }}"
  changed_when: false
