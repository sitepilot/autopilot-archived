---
- name: "user : {{ user.name }} : install required pip packages"
  pip:
    name: "{{ item }}"
    state: present
  loop:
    - PyMySQL

- name: "user : {{ user.name }} : ensure user group '{{ user.name }}' exists"
  group:
    name: "{{ user.name }}"
    state: present

- name: "user : {{ user.name }} : create user folder"
  file:
    path: "{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"
  loop:
    - "/opt/sitepilot/users/{{ user.name }}"

- name: "user : {{ user.name }} : ensure user exists"
  user:
    name: "{{ user.name }}"
    group: "{{ user.name }}"
    groups: "isolated"
    shell: "/bin/bash"
    password: "{{ user.password | password_hash('sha512') }}"
    comment: "{{ user.full_name if (user.full_name is defined) and (user.full_name|length > 0) else user.name }}"

- name: "user : {{ user.name }} : set home dir permission"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0750"
  loop:
    - "/home/{{ user.name }}"

- name: "user : {{ user.name }} : remove isolated group"
  user:
    name: "{{ user.name }}"
    groups: ""
  when:
    - user.isolated is defined
    - not user.isolated

- name: "user : {{ user.name }} : add authorized keys"
  authorized_key:
    user: "{{ user.name }}"
    state: present
    key: "{{ item.key }}"
  loop: "{{ user.auth_keys }}"
  when: user.auth_keys is defined

- name: "user : {{ user.name }}: create database user"
  mysql_user:
    name: "{{ user.name }}"
    password: "{{ user.mysql_password }}"
    priv: "{{ user.name }}_%.*:ALL"
    state: present
    host: "%"
    config_file: "/root/.my.cnf"
  when:
    - user.mysql_password is defined
    - user.mysql_password | length > 0
  no_log: true

- name: "user : {{ user.name }} : create databases"
  mysql_db:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present', true) }}"
    config_file: "/root/.my.cnf"
  loop: "{{ user.databases }}"
  when:
    - user.databases is defined

- name: "user : {{ user.name }}: provision apps"
  include: app.yml
  loop: "{{ user.apps if app_filter is not defined else user.apps | selectattr('name', 'match', app_filter) | list }}"
  loop_control:
    loop_var: app
