---
- name: "mysql : install MySQL python packages"
  pip:
    name: "{{ item }}"
    state: present
  loop:
    - PyMySQL

- name: "mysql : create service folders"
  file:
    path: "{{ item.path }}"
    owner: "{{ admin }}"
    group: "{{ admin }}"
    state: directory
    recurse: "{{ item.recurse }}"
  loop:
    - path: /opt/sitepilot/services/mysql
      recurse: false
    - path: /opt/sitepilot/services/mysql/logs/
      recurse: false
    - path: /opt/sitepilot/services/mysql/data/
      recurse: false
    - path: /opt/sitepilot/services/mysql/conf/
      recurse: false

- name: "mysql : get the admin UID"
  command: "id -u {{ admin }}"
  register: cmd_admin_uid
  changed_when: false

- name: "mysql : get the admin GID"
  command: "id -g {{ admin }}"
  register: cmd_admin_gid
  changed_when: false

- name: "mysql : generate service configuration"
  template:
    src: mysql_config.j2
    dest: /opt/sitepilot/services/mysql/conf/service.cnf

- name: "mysql : generate Docker Compose configuration"
  template:
    src: mysql_docker_compose.j2
    dest: /opt/sitepilot/services/mysql/docker-compose.yml

- name: "mysql : start containers"
  docker_compose:
    project_src: /opt/sitepilot/services/mysql

- name: "mysql : check if .my.cnf file exists for 'root' user"
  stat:
    path: "/root/.my.cnf"
  register: root_my_cnf

- name: "mysql : copy .my.cnf file with 'root' credentials"
  template:
    src: "mysql_root.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: not root_my_cnf.stat.exists

- name: "mysql : check if .my.cnf file exists for '{{ admin }}' user"
  stat:
    path: "/home/{{ admin }}/.my.cnf"
  register: admin_my_cnf

- name: "mysql : copy .my.cnf file with '{{ admin }}' credentials"
  template:
    src: "mysql_user.cnf.j2"
    dest: "/home/{{ admin }}/.my.cnf"
    owner: "{{ admin }}"
    group: "{{ admin }}"
    mode: 0600
  when: not admin_my_cnf.stat.exists

- name: "mysql : ensure '{{ admin }}' user has admin rights"
  mysql_user:
    name: "{{ admin }}"
    password: "{{ admin_pass }}"
    priv: "*.*:ALL,GRANT"
    state: present
    host: "%"
    config_file: "/root/.my.cnf"
  register: result
  retries: 5
  delay: 10
  until: result is not failed
  no_log: true

- name: "mysql: create backup dir"
  file:
    path: "{{ item }}"
    owner: "root"
    group: "root"
    state: directory
    mode: "0700"
  loop:
    - "/opt/sitepilot/backups"
    - "/opt/sitepilot/backups/mysql"

- name: "mysql : generate backup script"
  template:
    src: "mysql_backup.sh.j2"
    dest: "/opt/sitepilot/scripts/mysql-backup.sh"
    owner: "root"
    group: "root"
    mode: 0700

- name: "mysql : configure backup cron"
  cron:
    name: "backup mysql"
    hour: "*"
    minute: "0"
    job: "/opt/sitepilot/scripts/mysql-backup.sh > /dev/null"
